# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'login_registration_form.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

from PyQt5.QtWidgets import QMessageBox

from scheduler import Ui_MainWindow1

# from CuckooHash import CuckooHash

# from accounts_class import Accounts

from data_reader import read_accounts

from user_entry import user_account_add, generate_hash


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.ApplicationModal)
        MainWindow.setEnabled(True)
        MainWindow.resize(442, 239)
        MainWindow.setWindowIcon(QtGui.QIcon('C:/Users/fahad/Documents/Pycharm Projects/Project/images/logo.png'))
        MainWindow.setStyleSheet("QMainWindow {\n"
"    background-color:#ececec;\n"
"}")
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(40, 40, 91, 41))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei UI")
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.label.setFont(font)
        self.label.setStyleSheet("color: #272727;")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(40, 100, 91, 41))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei UI")
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color: #272727;")
        self.label_2.setObjectName("label_2")
        self.user_txtbox = QtWidgets.QLineEdit(self.centralwidget)
        self.user_txtbox.setGeometry(QtCore.QRect(140, 50, 241, 31))
        self.user_txtbox.setStyleSheet("border-width: 2px;\n"
"    border-radius: 8px;\n"
"    border-style: solid;\n"
"    border-top-color: qlineargradient(spread:pad, x1:0.5, y1:1, x2:0.5, y2:0, stop:0 #85b7e3, stop:1 #9ec1db);\n"
"    border-right-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #85b7e3, stop:1 #9ec1db);\n"
"    border-bottom-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, stop:0 #85b7e3, stop:1 #9ec1db);\n"
"    border-left-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:0, stop:0 #85b7e3, stop:1 #9ec1db);\n"
"    background-color: #f4f4f4;\n"
"    color: #3d3d3d;")
        self.user_txtbox.setObjectName("user_txtbox") # username textbox
        self.pwd_textbox = QtWidgets.QLineEdit(self.centralwidget)
        self.pwd_textbox.setGeometry(QtCore.QRect(140, 100, 241, 31))
        self.pwd_textbox.setEchoMode(QtWidgets.QLineEdit.Password)
        self.pwd_textbox.setStyleSheet("border-width: 2px;\n"
"    border-radius: 8px;\n"
"    border-style: solid;\n"
"    border-top-color: qlineargradient(spread:pad, x1:0.5, y1:1, x2:0.5, y2:0, stop:0 #85b7e3, stop:1 #9ec1db);\n"
"    border-right-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #85b7e3, stop:1 #9ec1db);\n"
"    border-bottom-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, stop:0 #85b7e3, stop:1 #9ec1db);\n"
"    border-left-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:0, stop:0 #85b7e3, stop:1 #9ec1db);\n"
"    background-color: #f4f4f4;\n"
"    color: #3d3d3d;\n"
"    lineedit-password-character: 9679;")
        self.pwd_textbox.setObjectName("pwd_textbox")
        self.login_register_btn = QtWidgets.QPushButton(self.centralwidget)
        self.login_register_btn.setGeometry(QtCore.QRect(160, 200, 111, 31))
        self.login_register_btn.setStyleSheet("QPushButton\n"
"{\n"
"    padding: 0 5px 0 5px;\n"
"    border-style: solid;\n"
"    border-top-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #c1c9cf, stop:1 #d2d8dd);\n"
"    border-right-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:0, stop:0 #c1c9cf, stop:1 #d2d8dd);\n"
"    border-bottom-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 #c1c9cf, stop:1 #d2d8dd);\n"
"    border-left-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #c1c9cf, stop:1 #d2d8dd);\n"
"    border-width: 2px;\n"
"    border-radius: 8px;\n"
"    color: #616161;\n"
"    font-weight: bold;\n"
"    background-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, stop:0 #fbfdfd, stop:0.5 #ffffff, stop:1 #fbfdfd);\n"
"}\n"
"\n"
"QPushButton::default\n"
"{\n"
"    border: 2px solid transparent;\n"
"    color: #FFFFFF;\n"
"    background-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, stop:0 #84afe5, stop:1 #1168e4);\n"
"}\n"
"\n"
"QPushButton:hover\n"
"{\n"
"    color: #3d3d3d;\n"
"}\n"
"\n"
"QPushButton:pressed\n"
"{\n"
"    color: #aeaeae;\n"
"    background-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, stop:0 #ffffff, stop:0.5 #fbfdfd, stop:1 #ffffff);\n"
"}")
        self.login_register_btn.setObjectName("login_register_btn")
        self.radioButton = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton.setGeometry(QtCore.QRect(40, 150, 141, 20))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei UI")
        font.setPointSize(7)
        self.radioButton.setFont(font)
        self.radioButton.setStyleSheet("QRadioButton \n"
"{\n"
"    color: #272727;\n"
"}\n"
"\n"
"QRadioButton:disabled \n"
"{\n"
"    color: #808086;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QRadioButton::indicator {\n"
"    height: 14px;\n"
"    width: 14px;\n"
"    border-style:solid;\n"
"    border-radius:7px;\n"
"    border-width: 1px;\n"
"}\n"
"QRadioButton::indicator:checked {\n"
"    border-color: #48a5fd;\n"
"    background-color: qradialgradient(cx:0.5, cy:0.5, radius:0.4,fx:0.5, fy:0.5, stop:0 #ffffff, stop:0.5 #ffffff, stop:0.6 #48a5fd, stop:1 #48a5fd);\n"
"}\n"
"QRadioButton::indicator:!checked {\n"
"    border-color: #a9b7c6;\n"
"    background-color: #fbfdfa;\n"
"}")
        self.radioButton.setObjectName("radioButton")
        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox.setGeometry(QtCore.QRect(390, 110, 81, 20))
        self.checkBox.setStyleSheet("QCheckBox\n"
"{\n"
"    color: #272727;\n"
"}\n"
"QCheckBox {\n"
"    padding: 2px;\n"
"}\n"
"QCheckBox:disabled{\n"
"    color: #808086;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QCheckBox:hover {\n"
"    border-radius:4px;\n"
"    border-style:solid;\n"
"    padding-left: 1px;\n"
"    padding-right: 1px;\n"
"    padding-bottom: 1px;\n"
"    padding-top: 1px;\n"
"    border-width:1px;\n"
"    border-color: transparent;\n"
"}\n"
"QCheckBox::indicator:checked {\n"
"    image: url(C:/Users/fahad/Documents/Pycharm Projects/Project/Images/check_mark.png);\n"
"    height: 15px;\n"
"    width: 15px;\n"
"    border-style:solid;\n"
"    border-width: 1px;\n"
"    border-color: #48a5fd;\n"
"    color: #ffffff;\n"
"    border-radius: 3px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #48a5fd, stop:0.5 #329cfb, stop:1 #48a5fd);\n"
"}\n"
"QCheckBox::indicator:unchecked {\n"
"    \n"
"    height: 15px;\n"
"    width: 15px;\n"
"    border-style:solid;\n"
"    border-width: 1px;\n"
"    border-color: #48a5fd;\n"
"    border-radius: 3px;\n"
"    background-color: #fbfdfa;\n"
"}")
        self.checkBox.setText("")
        self.checkBox.setObjectName("checkBox")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.login_register_btn.clicked.connect(self.login_registration)

        self.checkBox.clicked.connect(self.toggle_pwd)
    

    def toggle_pwd(self):
        value = self.checkBox.isChecked()

        if value: # is checked
                self.pwd_textbox.setEchoMode(QtWidgets.QLineEdit.Normal)
        else:
                self.pwd_textbox.setEchoMode(QtWidgets.QLineEdit.Password)

    def login_registration(self):
        value = self.radioButton.isChecked()
        username = self.user_txtbox.text()
        password = self.pwd_textbox.text()

        if not value:  # existing user - simply login                
                if username and not username.isspace():
                        if password and not " " in password:
                                self.login(username, password)
                        else:
                                self.credentials_warning(value)
                else:
                        self.credentials_warning(value)
        else:  # registration steps
                if username and not username.isspace():
                        if password and not " " in password:
                                self.user_registration(username, password)
                        else:
                                self.credentials_warning(value)
                else:
                        self.credentials_warning(value)

    def login_failure(self, value):
        msg = QMessageBox()
        msg.setIcon(QMessageBox.Warning)
        msg.setWindowTitle("Login Failure")
        msg.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
        msg.setText("Cannot login!")
        if value:
                msg.setDetailedText("Incorrect Password")
        else:
                msg.setDetailedText("No account associated with this username")
        msg.exec_()    

    def login_success(self):
        msg = QMessageBox()
        msg.setIcon(QMessageBox.Information)
        msg.setWindowTitle("Login Success")
        msg.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
        msg.setText("Successfully logged in!")
        msg.exec_()

    def login(self, username, password):
        account = CH.find(username)

        if account is not None:
                check_hash = generate_hash(account[1][0], password)
                if check_hash == account[1][1]:
                        self.window = QtWidgets.QMainWindow()
                        self.ui = Ui_MainWindow1()
                        self.ui.setup(self.window, MainWindow)
                        self.login_success()
                        self.window.show()
                        MainWindow.hide()
                else:
                        self.login_failure(1)
        else:
                self.login_failure(0)

    def user_registration(self, username, password):
        entry = CH.find(username)

        if entry is not None: # username exists
                self.registration_notifications(False)
        else:
                user_account_add(username, password, CH)
                self.registration_notifications(True)
                self.user_txtbox.setText("")
                self.pwd_textbox.setText("")
                self.radioButton.setChecked(False)
                self.checkBox.setChecked(False)
                self.pwd_textbox.setEchoMode(QtWidgets.QLineEdit.Password)

    def registration_notifications(self, value):
        msg = QMessageBox()
        msg.setWindowTitle("MessageBox demo")
        msg.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
        if not value:
                msg.setIcon(QMessageBox.Warning)
                msg.setText("Cannot Register!")
                msg.setDetailedText("The username is already taken! Account already exists.")
        else:
                msg.setIcon(QMessageBox.Information)
                msg.setText("Account Registered")
                msg.setDetailedText("Account has been created.")

        msg.exec_()

    def credentials_warning(self, value):
        msg = QMessageBox()
        msg.setIcon(QMessageBox.Warning)
        msg.setWindowTitle("MessageBox demo")
        msg.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
        msg.setDetailedText("Either the username or password is entered incorrectly.")
        if value:
                msg.setText("Cannot Register!")
        else:
                msg.setText("Cannot Login!")
        msg.exec_()

    
    def retranslateUi(self, MainWindow):

        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Login/Registration"))
        self.label.setText(_translate("MainWindow", "Username:"))
        self.label_2.setText(_translate("MainWindow", "Password:"))
        self.login_register_btn.setText(_translate("MainWindow", "Login/Register"))
        self.radioButton.setText(_translate("MainWindow", "Check if registering"))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)

    # setup the hash table with all the account details
    CH = read_accounts()
    read_accounts()

    MainWindow.show()
    sys.exit(app.exec_())
